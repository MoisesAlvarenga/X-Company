// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XCompany.DataContext;

#nullable disable

namespace XCompany.Migrations
{
    [DbContext(typeof(XCompanyContext))]
    partial class XCompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XCompany.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("customers_pkey");

                    b.HasIndex(new[] { "Email" }, "email_unique")
                        .IsUnique();

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("XCompany.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("price");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("stock");

                    b.HasKey("Id")
                        .HasName("products_pkey");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("XCompany.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<DateTime>("Saledate")
                        .HasColumnType("timestamp")
                        .HasColumnName("saledate");

                    b.HasKey("Id")
                        .HasName("sales_pkey");

                    b.HasIndex("Customerid");

                    b.ToTable("sales", (string)null);
                });

            modelBuilder.Entity("XCompany.Entities.Saleitem", b =>
                {
                    b.Property<int>("Saleid")
                        .HasColumnType("integer")
                        .HasColumnName("saleid");

                    b.Property<int>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Saleid", "Productid")
                        .HasName("pk_saleitems");

                    b.HasIndex("Productid");

                    b.ToTable("saleitems", (string)null);
                });

            modelBuilder.Entity("XCompany.Entities.Sale", b =>
                {
                    b.HasOne("XCompany.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("Customerid")
                        .IsRequired()
                        .HasConstraintName("fk_sales_customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("XCompany.Entities.Saleitem", b =>
                {
                    b.HasOne("XCompany.Entities.Product", "Product")
                        .WithMany("Saleitems")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_saleitems_products");

                    b.HasOne("XCompany.Entities.Sale", "Sale")
                        .WithMany("Saleitems")
                        .HasForeignKey("Saleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_saleitems_sales");

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("XCompany.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("XCompany.Entities.Product", b =>
                {
                    b.Navigation("Saleitems");
                });

            modelBuilder.Entity("XCompany.Entities.Sale", b =>
                {
                    b.Navigation("Saleitems");
                });
#pragma warning restore 612, 618
        }
    }
}
